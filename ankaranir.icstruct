(define
	(domain blocks-world)
	(:types 
		block
		color - vector[float32, 128]
		pose - vector[float32, 2]
	)	

	(:predicates
		(is-red ?x - color)
		(is-green ?x - color)
		(is-blue ?x - color)
		(pose ?t - tile)
	)

	(:predicates
		(clear ?x - block) ;; no block is on x
		(on ?x - block ?y - block) ;; is block x on y
		(robot-holding ?x - block ) ;; the robot is hlding x
	)

	(:action pick
	 :parameters (?x - block)
	 :precondition (and (robot-handfree) (clear ?x))
	 :effect (and (not (robot-handfree)) (robot-holding ?x) (not (clear ?x)) )
	)

	(:action place
	 :parameters (?x - block ?y - block)
	 :precondition (and (robot-holding ?x) (clear ?y))
	 :effect (and (robot-handfree) (not robot-holding ?x) (not clear ?y) (clear ?x) (on ?x ?y) )
	)

	(:action place-pose
	 :parameters (?x - block ?y - pose)
	 :precondition (true)
	 :effect (and (pose::asssign ?x ?y))
	)
)