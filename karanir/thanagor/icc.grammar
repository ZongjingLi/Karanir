start: instruction+


instruction: VARNAME
            | domain_definition
            | type_definitions
            | predicate_definitions
            | action_definitions
            | VARIABLE

// domain definition
domain_definition: "(" "domain" VARNAME ")"

// types definition group
type_definitions: "(" ":" "type" type_definition+ ")"
type_definition: object_type_name "-" parent_type_name | object_type_name
object_type_name: VARNAME
parent_type_name: object_type_name | vector_type_name

// predicate definition group
predicate_definitions: "(" ":" "predicate" predicate_definition+ ")"
predicate_definition: predicate_name parameters
predicate_name: VARNAME
parameters: parameter+
parameter: VARIABLE

// action definition group
action_definitions: "(" ":" "action-definitions" action_definition+ ")"
action_definition: "(" "action" ":" action_name "parameters" ":" parameters "precondition" ":" precondition "effect" ":" effect ")"
action_name: VARNAME
precondition: VARNAME
effect: VARNAME

// number type definition 
NUMBER: ("0".."9")+ 
FLOATNUMBER: NUMBER "." NUMBER

// variable name format definition
%import common.LETTER
%import common.DIGIT
VARIABLE: "?" VARNAME | "??"
VARNAME: ("_" | LETTER) ("_"|"-"|LETTER|DIGIT)*


typed_variable: VARIABLE "-" object_type_name

// types and predicate transforms
ARROW: "->"

value_type_name: type_name | vector_type_name
vector_type_name: "vector" "[" vector_choice  vector_size+ "]"

type_name: VARNAME
vector_choice: VARNAME
vector_size: "," NUMBER

// predefined data_type

// primitive operation definition
PLUS: "+"
MINUS: "-"
EXISTS: "exists"
IOTA: "iota"

WHITESPACE: (" " | "\n")+

%ignore WHITESPACE

NEWLINE: "\n"
COMMENT: ";" /(.)*/ NEWLINE
//       | "#" /(.)+/ NEWLINE
%ignore COMMENT